%******************************
%Simple 2D SHG radiation model
%Jeremy Bredfeldt, LOCI, Copyright 2014

%assume dipoles are completely uncoupled, (...big assumption)

%ignore polarization effects, perfect polarization diversity

%how to incorporate quasi-phase matching?
%how to incorporate coherence length
%******************************

%assume cylindrical symmetry
%z is the axis of the microscope
%x is the lateral axis

%0 degrees is positive x axis
%90 degrees is positive z axis
clear all;

%NA of the objective
na = 0.8;

%excitation wavelength
lamE = 0.890; %microns

%2nd harmonic wavelength
lamE2 = lamE/2;

%excitation wavenumber
kE = 2*pi/lamE;

%second harmonic wavenumber
kE2 = kE*2;

%PSF height
psfZ = (0.532*lamE/(sqrt(2)))*1/(1.33-sqrt(1.33-(na*na)));

%z space
ns = 512;
z = linspace(-psfZ/2,psfZ/2,ns);

%Gouy phase shift
gps = atan(z/(psfZ/2));

%excitation phase as a function of z
phE = kE*z + gps;

figure(1); plot(z,phE);
title('excitation phase over z');
xlabel('z in microns');
ylabel('phase in radians');

fib_ang = linspace(-180,180,64);
for i = 1:length(fib_ang)

    %fibril orientation with respect to x axis (radians)
    fo = fib_ang(i)*pi/180;    

    %dipole orientation with respect to x axis (radians)
    do = fo + -15*pi/180;

    %length of fibril in focal volume (microns)
    fl = psfZ;

    %dipole rate (dipoles per micron)
    dr = 50; %dipoles per micron

    %total number of dipoles
    tn = round(dr*fl);
    dp = linspace(-tn/2,tn/2,tn)*fl/tn;

    %position of each dipole in x,z space
    dx = dp*cos(fo);
    dz = dp*sin(fo);

    figure(2);
    plot(dx,dz,'*');
    title('dipole positions');
    xlim([-psfZ/2 psfZ/2]);
    ylim([-psfZ/2 psfZ/2]);

    %random phase mismatch term for each dipole
    phmm = 0.0*randn(1,tn);
    
    %initial phase of each dipole, assuming phase matching
    gps = atan(dz/(psfZ/2));
    dph = kE*dz + gps + phmm;

    %observations
    no = 128; %number of observations
    theta = linspace(-pi,pi,no);
    r = 5E7; %distance to observation point in microns
    %convert each r, theta to x, y for all observation points
    ox = r*cos(theta);
    oz = r*sin(theta);

    %distance from each screen point to each dipole center
    %use repmat!
    oxr = repmat(ox',1,tn);
    ozr = repmat(oz',1,tn);
    dxr = repmat(dx,no,1);
    dzr = repmat(dz,no,1);
    ddsx = oxr-dxr;
    ddsz = ozr-dzr;
    dds = sqrt(ddsx.^2 + ddsz.^2); %dist from dipole to screen

    %angle from each screen point to each dipole
    ads = atan2(ddsz,ddsx)-do;

    %phase of each dipole at each point on the screen (radians)
    dphr = repmat(dph,no,1);
    pdo = kE2*dds + dphr;

    %field at each observation point produced by each dipole
    eod = exp(1i*pdo);
    %modulate by the relative angle
    eoda = eod.*abs(sin(ads));

    %at every angle, integrate the far field signal generated by the dipoles
    eodi = sum(eoda');
    I = abs(eodi);
    I = I/max(I);

    figure(3);
    fake=1;
    polar(0,fake,'w');
    hold on;
    polar(theta,I);
    drawnow;
    hold off;

    bSHG(i) = sum(I(1:no/2));
    fSHG(i) = sum(I(no/2:end));
end

figure(4); clf;
plot(fib_ang, bSHG); hold all;
plot(fib_ang, fSHG);
xlabel('Fiber Angle');
ylabel('SHG Intensity');
legend('BSHG','FSHG');